package ch.heigvd.sym.myapplication.communication

import android.os.Looper
import android.os.Handler
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.OutputStream
import java.net.HttpURLConnection
import java.net.URL
import java.util.*
import java.util.zip.Deflater
import java.util.zip.DeflaterOutputStream
import java.util.zip.Inflater
import java.util.zip.InflaterInputStream
import kotlin.concurrent.thread

/**
 * Authors : Axel Vallon, Lev Pozniakoff and Robin Gaudin
 * Date : 12.11.2021
 * SymComManager: Communication class
 */

class SymComManager(private var communicationEventListener: CommunicationEventListener? = null) {
    var centString =        "awog8HAFAUU6fA5p2Yvc8uNIP2TnRuLfLC1Mcty8Zfp5lx9vuAVodemFmgelB0PzFklD7o4xHXFeDZz1p3xX4OgdfgQ1ieF18duZ".toByteArray(Charsets.UTF_8)
    var centRepString =     "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa".toByteArray(Charsets.UTF_8)
    var milleString =       "pLNbvhHMskkBl8jnYYnHLoDk5xI7jGQwf4XZDqWHPmL3DGARDd1FsZwrkTHf8wOMrNPhqV8Q0pZYPbafd3Y9EL6CiSsMCMN9mGuJnI9zyvzLE29VOUy0RRxRw5k9KXO6ktwJAb6UKNnNp2DYDQqrLk9c77zpPKXUFY1TPsvCyghLCrCAlyi9B52lQYbmI6tBdOhSJjJrS1DbLYLGDwGhgFPEo0d9T6HeFwIBqBh12ioIYECZItXHrdY6qOiILvCFDowojQwDtyv79XMq0Im7EQB5BRW9TeO0smqUhLZtEtYwNbQBGbvt17F545a0qGTdOv4o4bdAZoNr3gnZ5ziY4STkZGtQ6iiGJth5xkDP8xBLueU5DJhVZNacuSTJCgPjIkWfYsWjTRbeWfkdZnwG4t8pXtPhvdMaNMSXgkyjYLc5yHeFlzPDrfFxPMCSII9uPpGDPZgKUmxBMWUWaY0yNAq99VoRYTiIo0ai1F7WKgUYOSO6tq2pxN8bwQguvW0QPZiPT1iBTsDJNpewTNBD1Roq5TLd9d0AbduxXzU8meGS2QytjvBZowErSe240UWNxn9HDgo6YuhWjXg0NLHjHDKvU6yqP68IAPuDEoLO7uQ0Mx9UD3K1DAkKWflWFrIVVwOmmW2EKnmY4OAZgcPs4fpzIPJ0V44DRbMHNSfxrTINlYWLcet2o8eAVdNWvrh0IcglHHB9QDUeAd9xK4hwHo36y6r2NOzhKhb2DknHxjkBzXe8DOe8Z7ppqDVnijTTuhfVmBova01LD2WORdKBQoKGpkigZoHpZcTqPQaIhhcnI8VqmmVffSXh8sRKuNyhjwKgVS23XNZZom1OZrwyJ1kKhuJlKyy39ZxlXdG5o1txO9KtuA4zUpfUSyZNCyCzAbMf33FryTw33np6NFNu8zxq3KqCztUjAvetWjhgz9pCqe6I2kuo4NfIGjVADXETeaRdFHzxEAZHm1WrFE5oHABYCrdcuBh648PP5Sry".toByteArray(Charsets.UTF_8)
    var milleRepString =    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa".toByteArray(Charsets.UTF_8)
    var dixmilleString =    "".toByteArray(Charsets.UTF_8)
    var dixmilleRepString = "".toByteArray(Charsets.UTF_8)

    fun sendRequest(url: String, request: ByteArray, content_type: String = "text/plain", compressed: Boolean = false) {
            thread {
                val instant1 = Date() //for benchmark

                val connection = URL(url).openConnection() as HttpURLConnection
                connection.requestMethod = "POST"
                connection.setRequestProperty("Content-Type", content_type)
                // Add theses headers if it must be compressed
                if (compressed) {
                    connection.setRequestProperty("X-Network", "CSD")
                    connection.setRequestProperty("X-Content-Encoding", "deflate")
                }
                connection.doOutput = true

                try {
                    // Configure in case it must be compressed or not
                    val os: OutputStream = if (compressed) {
                        DeflaterOutputStream(connection.outputStream, Deflater(9, true))
                    } else {
                        connection.outputStream
                    }
                    os.write(request)
                    os.close()
                } catch (exception: Exception) {
                    exception.printStackTrace()
                }

                try {
                    val br = BufferedReader(
                        // Check if the data have been compressed or not
                        if (connection.headerFields["X-Content-Encoding"]?.isEmpty() == false) {
                            InputStreamReader(InflaterInputStream(connection.inputStream, Inflater(true)))
                        } else {
                            InputStreamReader(connection.inputStream)
                        }
                    )

                    // read answer as string
                    val response: String = br.readText()

                    // Send the response in the main thread
                    val mHandler = Handler(Looper.getMainLooper())
                    val runnable = Runnable {communicationEventListener?.handleServerResponse(response)}
                    mHandler.post( runnable )
                    br.close()
                } catch (exception: Exception) {
                    exception.printStackTrace()
                } finally {
                    connection.disconnect()
                }

            }
    }


}